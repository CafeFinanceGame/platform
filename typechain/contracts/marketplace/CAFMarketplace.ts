/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumberish,
  BytesLike,
  FunctionFragment,
  Result,
  Interface,
  EventFragment,
  AddressLike,
  ContractRunner,
  ContractMethod,
  Listener,
} from "ethers";
import type {
  TypedContractEvent,
  TypedDeferredTopicFilter,
  TypedEventLog,
  TypedLogDescription,
  TypedListener,
  TypedContractMethod,
} from "../../common";

export interface CAFMarketplaceInterface extends Interface {
  getFunction(
    nameOrSignature:
      | "ADMIN_ROLE"
      | "DEFAULT_ADMIN_ROLE"
      | "SYSTEM_ROLE"
      | "_listedItems"
      | "autoList"
      | "buy"
      | "calculateResalePrice"
      | "getRoleAdmin"
      | "grantRole"
      | "hasRole"
      | "list"
      | "renounceRole"
      | "resell"
      | "revokeRole"
      | "setUp"
      | "supportsInterface"
      | "unlist"
      | "updatePrice"
  ): FunctionFragment;

  getEvent(
    nameOrSignatureOrTopic:
      | "ItemBought"
      | "ItemListed"
      | "ItemPriceUpdated"
      | "ItemResold"
      | "ItemUnlisted"
      | "RoleAdminChanged"
      | "RoleGranted"
      | "RoleRevoked"
  ): EventFragment;

  encodeFunctionData(
    functionFragment: "ADMIN_ROLE",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "DEFAULT_ADMIN_ROLE",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "SYSTEM_ROLE",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "_listedItems",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(functionFragment: "autoList", values?: undefined): string;
  encodeFunctionData(functionFragment: "buy", values: [BigNumberish]): string;
  encodeFunctionData(
    functionFragment: "calculateResalePrice",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getRoleAdmin",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "grantRole",
    values: [BytesLike, AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "hasRole",
    values: [BytesLike, AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "list",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "renounceRole",
    values: [BytesLike, AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "resell",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "revokeRole",
    values: [BytesLike, AddressLike]
  ): string;
  encodeFunctionData(functionFragment: "setUp", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "supportsInterface",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "unlist",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "updatePrice",
    values: [BigNumberish, BigNumberish]
  ): string;

  decodeFunctionResult(functionFragment: "ADMIN_ROLE", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "DEFAULT_ADMIN_ROLE",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "SYSTEM_ROLE",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "_listedItems",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "autoList", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "buy", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "calculateResalePrice",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getRoleAdmin",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "grantRole", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "hasRole", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "list", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "renounceRole",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "resell", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "revokeRole", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "setUp", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "supportsInterface",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "unlist", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "updatePrice",
    data: BytesLike
  ): Result;
}

export namespace ItemBoughtEvent {
  export type InputTuple = [
    _itemId: BigNumberish,
    _buyer: AddressLike,
    _seller: AddressLike,
    _price: BigNumberish
  ];
  export type OutputTuple = [
    _itemId: bigint,
    _buyer: string,
    _seller: string,
    _price: bigint
  ];
  export interface OutputObject {
    _itemId: bigint;
    _buyer: string;
    _seller: string;
    _price: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace ItemListedEvent {
  export type InputTuple = [
    _itemId: BigNumberish,
    _owner: AddressLike,
    _price: BigNumberish
  ];
  export type OutputTuple = [_itemId: bigint, _owner: string, _price: bigint];
  export interface OutputObject {
    _itemId: bigint;
    _owner: string;
    _price: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace ItemPriceUpdatedEvent {
  export type InputTuple = [
    _itemId: BigNumberish,
    _owner: AddressLike,
    _price: BigNumberish
  ];
  export type OutputTuple = [_itemId: bigint, _owner: string, _price: bigint];
  export interface OutputObject {
    _itemId: bigint;
    _owner: string;
    _price: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace ItemResoldEvent {
  export type InputTuple = [
    _itemId: BigNumberish,
    _owner: AddressLike,
    _price: BigNumberish
  ];
  export type OutputTuple = [_itemId: bigint, _owner: string, _price: bigint];
  export interface OutputObject {
    _itemId: bigint;
    _owner: string;
    _price: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace ItemUnlistedEvent {
  export type InputTuple = [_itemId: BigNumberish, _owner: AddressLike];
  export type OutputTuple = [_itemId: bigint, _owner: string];
  export interface OutputObject {
    _itemId: bigint;
    _owner: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace RoleAdminChangedEvent {
  export type InputTuple = [
    role: BytesLike,
    previousAdminRole: BytesLike,
    newAdminRole: BytesLike
  ];
  export type OutputTuple = [
    role: string,
    previousAdminRole: string,
    newAdminRole: string
  ];
  export interface OutputObject {
    role: string;
    previousAdminRole: string;
    newAdminRole: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace RoleGrantedEvent {
  export type InputTuple = [
    role: BytesLike,
    account: AddressLike,
    sender: AddressLike
  ];
  export type OutputTuple = [role: string, account: string, sender: string];
  export interface OutputObject {
    role: string;
    account: string;
    sender: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace RoleRevokedEvent {
  export type InputTuple = [
    role: BytesLike,
    account: AddressLike,
    sender: AddressLike
  ];
  export type OutputTuple = [role: string, account: string, sender: string];
  export interface OutputObject {
    role: string;
    account: string;
    sender: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export interface CAFMarketplace extends BaseContract {
  connect(runner?: ContractRunner | null): CAFMarketplace;
  waitForDeployment(): Promise<this>;

  interface: CAFMarketplaceInterface;

  queryFilter<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;
  queryFilter<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;

  on<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  on<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  once<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  once<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  listeners<TCEvent extends TypedContractEvent>(
    event: TCEvent
  ): Promise<Array<TypedListener<TCEvent>>>;
  listeners(eventName?: string): Promise<Array<Listener>>;
  removeAllListeners<TCEvent extends TypedContractEvent>(
    event?: TCEvent
  ): Promise<this>;

  ADMIN_ROLE: TypedContractMethod<[], [string], "view">;

  DEFAULT_ADMIN_ROLE: TypedContractMethod<[], [string], "view">;

  SYSTEM_ROLE: TypedContractMethod<[], [string], "view">;

  _listedItems: TypedContractMethod<
    [arg0: BigNumberish],
    [[bigint, string, bigint] & { id: bigint; owner: string; price: bigint }],
    "view"
  >;

  autoList: TypedContractMethod<[], [void], "nonpayable">;

  buy: TypedContractMethod<[_itemId: BigNumberish], [void], "nonpayable">;

  calculateResalePrice: TypedContractMethod<
    [_itemId: BigNumberish],
    [bigint],
    "view"
  >;

  getRoleAdmin: TypedContractMethod<[role: BytesLike], [string], "view">;

  grantRole: TypedContractMethod<
    [role: BytesLike, account: AddressLike],
    [void],
    "nonpayable"
  >;

  hasRole: TypedContractMethod<
    [role: BytesLike, account: AddressLike],
    [boolean],
    "view"
  >;

  list: TypedContractMethod<
    [_itemId: BigNumberish, _price: BigNumberish],
    [void],
    "nonpayable"
  >;

  renounceRole: TypedContractMethod<
    [role: BytesLike, callerConfirmation: AddressLike],
    [void],
    "nonpayable"
  >;

  resell: TypedContractMethod<[_itemId: BigNumberish], [void], "nonpayable">;

  revokeRole: TypedContractMethod<
    [role: BytesLike, account: AddressLike],
    [void],
    "nonpayable"
  >;

  setUp: TypedContractMethod<[], [void], "nonpayable">;

  supportsInterface: TypedContractMethod<
    [interfaceId: BytesLike],
    [boolean],
    "view"
  >;

  unlist: TypedContractMethod<[_itemId: BigNumberish], [void], "nonpayable">;

  updatePrice: TypedContractMethod<
    [_itemId: BigNumberish, _price: BigNumberish],
    [void],
    "nonpayable"
  >;

  getFunction<T extends ContractMethod = ContractMethod>(
    key: string | FunctionFragment
  ): T;

  getFunction(
    nameOrSignature: "ADMIN_ROLE"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "DEFAULT_ADMIN_ROLE"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "SYSTEM_ROLE"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "_listedItems"
  ): TypedContractMethod<
    [arg0: BigNumberish],
    [[bigint, string, bigint] & { id: bigint; owner: string; price: bigint }],
    "view"
  >;
  getFunction(
    nameOrSignature: "autoList"
  ): TypedContractMethod<[], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "buy"
  ): TypedContractMethod<[_itemId: BigNumberish], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "calculateResalePrice"
  ): TypedContractMethod<[_itemId: BigNumberish], [bigint], "view">;
  getFunction(
    nameOrSignature: "getRoleAdmin"
  ): TypedContractMethod<[role: BytesLike], [string], "view">;
  getFunction(
    nameOrSignature: "grantRole"
  ): TypedContractMethod<
    [role: BytesLike, account: AddressLike],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "hasRole"
  ): TypedContractMethod<
    [role: BytesLike, account: AddressLike],
    [boolean],
    "view"
  >;
  getFunction(
    nameOrSignature: "list"
  ): TypedContractMethod<
    [_itemId: BigNumberish, _price: BigNumberish],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "renounceRole"
  ): TypedContractMethod<
    [role: BytesLike, callerConfirmation: AddressLike],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "resell"
  ): TypedContractMethod<[_itemId: BigNumberish], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "revokeRole"
  ): TypedContractMethod<
    [role: BytesLike, account: AddressLike],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "setUp"
  ): TypedContractMethod<[], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "supportsInterface"
  ): TypedContractMethod<[interfaceId: BytesLike], [boolean], "view">;
  getFunction(
    nameOrSignature: "unlist"
  ): TypedContractMethod<[_itemId: BigNumberish], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "updatePrice"
  ): TypedContractMethod<
    [_itemId: BigNumberish, _price: BigNumberish],
    [void],
    "nonpayable"
  >;

  getEvent(
    key: "ItemBought"
  ): TypedContractEvent<
    ItemBoughtEvent.InputTuple,
    ItemBoughtEvent.OutputTuple,
    ItemBoughtEvent.OutputObject
  >;
  getEvent(
    key: "ItemListed"
  ): TypedContractEvent<
    ItemListedEvent.InputTuple,
    ItemListedEvent.OutputTuple,
    ItemListedEvent.OutputObject
  >;
  getEvent(
    key: "ItemPriceUpdated"
  ): TypedContractEvent<
    ItemPriceUpdatedEvent.InputTuple,
    ItemPriceUpdatedEvent.OutputTuple,
    ItemPriceUpdatedEvent.OutputObject
  >;
  getEvent(
    key: "ItemResold"
  ): TypedContractEvent<
    ItemResoldEvent.InputTuple,
    ItemResoldEvent.OutputTuple,
    ItemResoldEvent.OutputObject
  >;
  getEvent(
    key: "ItemUnlisted"
  ): TypedContractEvent<
    ItemUnlistedEvent.InputTuple,
    ItemUnlistedEvent.OutputTuple,
    ItemUnlistedEvent.OutputObject
  >;
  getEvent(
    key: "RoleAdminChanged"
  ): TypedContractEvent<
    RoleAdminChangedEvent.InputTuple,
    RoleAdminChangedEvent.OutputTuple,
    RoleAdminChangedEvent.OutputObject
  >;
  getEvent(
    key: "RoleGranted"
  ): TypedContractEvent<
    RoleGrantedEvent.InputTuple,
    RoleGrantedEvent.OutputTuple,
    RoleGrantedEvent.OutputObject
  >;
  getEvent(
    key: "RoleRevoked"
  ): TypedContractEvent<
    RoleRevokedEvent.InputTuple,
    RoleRevokedEvent.OutputTuple,
    RoleRevokedEvent.OutputObject
  >;

  filters: {
    "ItemBought(uint256,address,address,uint256)": TypedContractEvent<
      ItemBoughtEvent.InputTuple,
      ItemBoughtEvent.OutputTuple,
      ItemBoughtEvent.OutputObject
    >;
    ItemBought: TypedContractEvent<
      ItemBoughtEvent.InputTuple,
      ItemBoughtEvent.OutputTuple,
      ItemBoughtEvent.OutputObject
    >;

    "ItemListed(uint256,address,uint256)": TypedContractEvent<
      ItemListedEvent.InputTuple,
      ItemListedEvent.OutputTuple,
      ItemListedEvent.OutputObject
    >;
    ItemListed: TypedContractEvent<
      ItemListedEvent.InputTuple,
      ItemListedEvent.OutputTuple,
      ItemListedEvent.OutputObject
    >;

    "ItemPriceUpdated(uint256,address,uint256)": TypedContractEvent<
      ItemPriceUpdatedEvent.InputTuple,
      ItemPriceUpdatedEvent.OutputTuple,
      ItemPriceUpdatedEvent.OutputObject
    >;
    ItemPriceUpdated: TypedContractEvent<
      ItemPriceUpdatedEvent.InputTuple,
      ItemPriceUpdatedEvent.OutputTuple,
      ItemPriceUpdatedEvent.OutputObject
    >;

    "ItemResold(uint256,address,uint256)": TypedContractEvent<
      ItemResoldEvent.InputTuple,
      ItemResoldEvent.OutputTuple,
      ItemResoldEvent.OutputObject
    >;
    ItemResold: TypedContractEvent<
      ItemResoldEvent.InputTuple,
      ItemResoldEvent.OutputTuple,
      ItemResoldEvent.OutputObject
    >;

    "ItemUnlisted(uint256,address)": TypedContractEvent<
      ItemUnlistedEvent.InputTuple,
      ItemUnlistedEvent.OutputTuple,
      ItemUnlistedEvent.OutputObject
    >;
    ItemUnlisted: TypedContractEvent<
      ItemUnlistedEvent.InputTuple,
      ItemUnlistedEvent.OutputTuple,
      ItemUnlistedEvent.OutputObject
    >;

    "RoleAdminChanged(bytes32,bytes32,bytes32)": TypedContractEvent<
      RoleAdminChangedEvent.InputTuple,
      RoleAdminChangedEvent.OutputTuple,
      RoleAdminChangedEvent.OutputObject
    >;
    RoleAdminChanged: TypedContractEvent<
      RoleAdminChangedEvent.InputTuple,
      RoleAdminChangedEvent.OutputTuple,
      RoleAdminChangedEvent.OutputObject
    >;

    "RoleGranted(bytes32,address,address)": TypedContractEvent<
      RoleGrantedEvent.InputTuple,
      RoleGrantedEvent.OutputTuple,
      RoleGrantedEvent.OutputObject
    >;
    RoleGranted: TypedContractEvent<
      RoleGrantedEvent.InputTuple,
      RoleGrantedEvent.OutputTuple,
      RoleGrantedEvent.OutputObject
    >;

    "RoleRevoked(bytes32,address,address)": TypedContractEvent<
      RoleRevokedEvent.InputTuple,
      RoleRevokedEvent.OutputTuple,
      RoleRevokedEvent.OutputObject
    >;
    RoleRevoked: TypedContractEvent<
      RoleRevokedEvent.InputTuple,
      RoleRevokedEvent.OutputTuple,
      RoleRevokedEvent.OutputObject
    >;
  };
}
