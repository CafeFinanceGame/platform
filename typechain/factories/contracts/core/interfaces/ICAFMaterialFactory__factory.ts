/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  ICAFMaterialFactory,
  ICAFMaterialFactoryInterface,
} from "../../../../contracts/core/interfaces/ICAFMaterialFactory";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "enum ItemLibrary.ProductItemType",
        name: "_productType",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_rateProducedPerHour",
        type: "uint256",
      },
    ],
    name: "ProductsProduced",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "enum ItemLibrary.ProductItemType",
        name: "_productType",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "_rateProducedPerHour",
        type: "uint256",
      },
    ],
    name: "produceProducts",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class ICAFMaterialFactory__factory {
  static readonly abi = _abi;
  static createInterface(): ICAFMaterialFactoryInterface {
    return new Interface(_abi) as ICAFMaterialFactoryInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ICAFMaterialFactory {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as ICAFMaterialFactory;
  }
}
