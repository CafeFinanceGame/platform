/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  ICAFCompanyItems,
  ICAFCompanyItemsInterface,
} from "../../../../contracts/core/interfaces/ICAFCompanyItems";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "companyId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "CompanyItemCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "companyId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "EnergyConsumed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "companyId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "EnergyReplenished",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "companyId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "EnergyUsed",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "enum ItemLibrary.CompanyType",
        name: "_role",
        type: "uint8",
      },
    ],
    name: "createCompanyItem",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllCompanyItemIds",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_companyId",
        type: "uint256",
      },
    ],
    name: "getCompanyItem",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "enum ItemLibrary.CompanyType",
            name: "role",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "energy",
            type: "uint8",
          },
        ],
        internalType: "struct ICAFCompanyItems.Company",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_companyId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
    ],
    name: "replenishEnergy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_companyId",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "_amount",
        type: "uint8",
      },
    ],
    name: "useEnergy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class ICAFCompanyItems__factory {
  static readonly abi = _abi;
  static createInterface(): ICAFCompanyItemsInterface {
    return new Interface(_abi) as ICAFCompanyItemsInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ICAFCompanyItems {
    return new Contract(address, _abi, runner) as unknown as ICAFCompanyItems;
  }
}
