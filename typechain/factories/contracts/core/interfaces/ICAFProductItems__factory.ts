/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  ICAFProductItems,
  ICAFProductItemsInterface,
} from "../../../../contracts/core/interfaces/ICAFProductItems";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "lastDecayed",
        type: "uint256",
      },
    ],
    name: "ItemDecayed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "itemId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "companyId",
        type: "uint256",
      },
    ],
    name: "ProductItemCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "itemId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "enum ItemLibrary.ProductItemType",
        name: "productType",
        type: "uint8",
      },
    ],
    name: "ProductItemManufactured",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_companyId",
        type: "uint256",
      },
      {
        internalType: "enum ItemLibrary.ProductItemType",
        name: "_productType",
        type: "uint8",
      },
    ],
    name: "createProductItem",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
    ],
    name: "decay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllProductItemIds",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
    ],
    name: "getProductItem",
    outputs: [
      {
        components: [
          {
            internalType: "enum ItemLibrary.ProductItemType",
            name: "productType",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint8",
            name: "energy",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "durability",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "decayRatePerHour",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "msgTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastDecayedTime",
            type: "uint256",
          },
        ],
        internalType: "struct ICAFProductItems.ProductItem",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum ItemLibrary.ProductItemType",
        name: "_productType",
        type: "uint8",
      },
      {
        internalType: "uint256[]",
        name: "_componentIds",
        type: "uint256[]",
      },
    ],
    name: "manufacture",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class ICAFProductItems__factory {
  static readonly abi = _abi;
  static createInterface(): ICAFProductItemsInterface {
    return new Interface(_abi) as ICAFProductItemsInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ICAFProductItems {
    return new Contract(address, _abi, runner) as unknown as ICAFProductItems;
  }
}
