/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  ICAFContractRegistry,
  ICAFContractRegistryInterface,
} from "../../../../contracts/core/interfaces/ICAFContractRegistry";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "contractType",
        type: "uint256",
      },
    ],
    name: "getContractAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "contractType",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
    ],
    name: "registerContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "contractType",
        type: "uint256",
      },
    ],
    name: "unregisterContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class ICAFContractRegistry__factory {
  static readonly abi = _abi;
  static createInterface(): ICAFContractRegistryInterface {
    return new Interface(_abi) as ICAFContractRegistryInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ICAFContractRegistry {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as ICAFContractRegistry;
  }
}
