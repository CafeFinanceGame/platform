/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  ICAFEventItems,
  ICAFEventItemsInterface,
} from "../../../../contracts/core/interfaces/ICAFEventItems";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "eventId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "enum ItemLibrary.EventItemType",
        name: "eventType",
        type: "uint8",
      },
    ],
    name: "EventItemCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "eventId",
        type: "uint256",
      },
    ],
    name: "EventItemEnded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "eventId",
        type: "uint256",
      },
    ],
    name: "EventItemStarted",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "enum ItemLibrary.EventItemType",
        name: "_eventType",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "_startDate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_endDate",
        type: "uint256",
      },
    ],
    name: "createEventItem",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
    ],
    name: "endEvent",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllActiveEventItemIds",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllEventItemIds",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
    ],
    name: "getEventItem",
    outputs: [
      {
        components: [
          {
            internalType: "enum ItemLibrary.EventItemType",
            name: "eventType",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "startDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endDate",
            type: "uint256",
          },
        ],
        internalType: "struct ICAFEventItems.EventItem",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
    ],
    name: "startEvent",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class ICAFEventItems__factory {
  static readonly abi = _abi;
  static createInterface(): ICAFEventItemsInterface {
    return new Interface(_abi) as ICAFEventItemsInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ICAFEventItems {
    return new Contract(address, _abi, runner) as unknown as ICAFEventItems;
  }
}
